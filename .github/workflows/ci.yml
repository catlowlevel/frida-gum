name: CI
on:
  workflow_dispatch:
    inputs:
      upload_to_release:
        description: 'Upload artifacts to GitHub Release'
        required: false
        default: 'false'
        type: boolean

env:
  GUM_OPTIONS: '--enable-gumpp --enable-gumjs --with-devkits=gum,gumjs --disable-tests --disable-v8 --enable-frida-java-bridge'

jobs:
  build:
    strategy:
      matrix:
        id:
          - android-x86
          - android-x86_64
          - android-arm
          - android-arm64
      fail-fast: true
    runs-on: ubuntu-latest
    outputs:
      release_upload: ${{ steps.set-release-upload.outputs.release_upload }}
    steps:
      - name: Check out repo
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - uses: nttld/setup-ndk@v1
        id: setup-ndk
        with:
          ndk-version: r25
          add-to-path: false

      - name: Set ANDROID_NDK_ROOT
        run: echo "ANDROID_NDK_ROOT=${{ steps.setup-ndk.outputs.ndk-path }}" >> $GITHUB_ENV

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
              libjson-glib-dev \
              libglib2.0-dev \
              ninja-build

      - name: Build
        run: |
          ./configure --host=${{ matrix.id }} ${{ env.GUM_OPTIONS }}
          make

      - name: Package artifacts
        run: |
          tar -czf gum-devkit-${{ matrix.id }}.tar.gz -C build/gum/devkit/ .
          tar -czf gumjs-devkit-${{ matrix.id }}.tar.gz -C build/bindings/gumjs/devkit/ .

      - name: Upload Gum devkit artifact
        uses: actions/upload-artifact@v4
        with:
          name: gum-devkit-${{ matrix.id }}
          path: gum-devkit-${{ matrix.id }}.tar.gz

      - name: Upload GumJS devkit artifact
        uses: actions/upload-artifact@v4
        with:
          name: gumjs-devkit-${{ matrix.id }}
          path: gumjs-devkit-${{ matrix.id }}.tar.gz

  release:
    if: ${{ github.event.inputs.upload_to_release == 'true' }}
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: ./artifacts

      - name: Create or get release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref_name || 'latest' }}
          name: "Release ${{ github.ref_name || 'latest' }}"
          body: "Automated release with devkit artifacts."
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload all artifacts to the same release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref_name || 'latest' }}
          files: ./artifacts/**/*.tar.gz
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
