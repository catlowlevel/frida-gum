name: CI

on:
  workflow_dispatch:
    inputs:
      upload_to_release:
        description: 'Upload artifacts to GitHub release?'
        required: true
        default: 'false'
        type: choice
        options:
          - 'true'
          - 'false'

env:
  GUM_OPTIONS: '--enable-gumpp --enable-gumjs --with-devkits=gum,gumjs --disable-tests --disable-v8 --enable-frida-java-bridge'

jobs:
  android:
    strategy:
      matrix:
        id:
          - android-x86
          - android-x86_64
          - android-arm
          - android-arm64
      fail-fast: true
    runs-on: ubuntu-latest
    steps:
      - name: Check out repo
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Set up Android NDK
        id: setup-ndk
        uses: nttld/setup-ndk@v1
        with:
          ndk-version: ${{ env.ANDROID_NDK_VERSION }}
          add-to-path: true

      - name: Set environment variables
        run: |
          echo "ANDROID_NDK_ROOT=${{ steps.setup-ndk.outputs.ndk-path }}" >> $GITHUB_ENV
          echo "TARGET_ARCH=${{ matrix.id }}" >> $GITHUB_ENV

      - name: Install build dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y cmake ninja-build

      - name: Clone custom libc++
        run: |
          git clone --recursive ${{ env.LIBCXX_REPO }} ${{ env.LIBCXX_DIR }}

      - name: Build custom libc++
        run: |
          mkdir -p build_libcxx
          cd build_libcxx
          cmake ../${{ env.LIBCXX_DIR }} \
            -DCMAKE_TOOLCHAIN_FILE=${ANDROID_NDK_ROOT}/build/cmake/android.toolchain.cmake \
            -DANDROID_PLATFORM=android-${{ env.API_LEVEL }} \
            -DANDROID_ABI=${{ env.TARGET_ARCH }} \
            -DCMAKE_BUILD_TYPE=Release \
            -DCMAKE_INSTALL_PREFIX=../${{ env.LIBCXX_DIR }}/install
          cmake --build . --target install

      - name: Build frida-gum with custom libc++
        run: |
          export CXXFLAGS="-nostdinc++ -I${{ env.LIBCXX_DIR }}/install/include/c++/v1"
          export LDFLAGS="-L${{ env.LIBCXX_DIR }}/install/lib -lc++_shared"
          ./configure --host=${{ matrix.id }} ${{ env.GUM_OPTIONS }}
          make

      - name: Upload Gum devkit
        uses: actions/upload-artifact@v4
        with:
          name: gum-devkit-${{ matrix.id }}
          path: build/gum/devkit/

      - name: Upload GumJS devkit
        uses: actions/upload-artifact@v4
        with:
          name: gumjs-devkit-${{ matrix.id }}
          path: build/bindings/gumjs/devkit/
